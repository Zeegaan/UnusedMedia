// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { UnusedMediaError, UnusedMediaResponse, DeleteData, DeleteError, DeleteResponse, RecycleBinMediaError, RecycleBinMediaResponse, RestoreAllData, RestoreAllError, RestoreAllResponse } from './types.gen';

export const client = createClient(createConfig());

export class EnhancedMediaService {
    public static unusedMedia<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<UnusedMediaResponse, UnusedMediaError, ThrowOnError>({
            ...options,
            url: '/umbraco/unusedmedia/api/v1/all'
        });
    }
    
    public static delete<ThrowOnError extends boolean = false>(options?: Options<DeleteData, ThrowOnError>) {
        return (options?.client ?? client).post<DeleteResponse, DeleteError, ThrowOnError>({
            ...options,
            url: '/umbraco/unusedmedia/api/v1/delete'
        });
    }
    
    public static recycleBinMedia<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<RecycleBinMediaResponse, RecycleBinMediaError, ThrowOnError>({
            ...options,
            url: '/umbraco/unusedmedia/api/v1/get-recycle-bin'
        });
    }
    
    public static restoreAll<ThrowOnError extends boolean = false>(options?: Options<RestoreAllData, ThrowOnError>) {
        return (options?.client ?? client).put<RestoreAllResponse, RestoreAllError, ThrowOnError>({
            ...options,
            url: '/umbraco/unusedmedia/api/v1/restore'
        });
    }
    
}